name: Deployment start hook
description: Run pre deployment tasks

inputs:
  package-name:
    description: The name of the package eg. @configu/xyz
    required: true
  slack-webhook:
    description: The Slack webhook URL
    required: true

outputs:
  release-package:
    description: Release package
    value: ${{ steps.release-info.outputs.package }}
  release-sha:
    description: Release sha
    value: ${{ steps.release-info.outputs.sha }}
  release-branch:
    description: Release branch
    value: ${{ steps.release-info.outputs.branch }}
  release-tag:
    description: Release tag
    value: ${{ steps.release-info.outputs.tag }}
  release-version:
    description: Release version
    value: ${{ steps.release-info.outputs.version }}
  release-channel:
    description: Release channel
    value: ${{ steps.release-info.outputs.channel }}

runs:
  using: composite
  steps:
    - name: Extract release information
      id: release-info
      shell: bash
      run: |
        sha=$(git rev-parse --short HEAD)

        ref_tag=${{ github.event.ref }}
        ref_branch=${{ github.event.base_ref }}

        tag=${ref_tag#refs/tags/}
        branch=${ref_branch#refs/heads/}

        package=$(echo "$tag" | awk -F '/v' '{print $1}')
        version=$(echo "$tag" | awk -F '/v' '{print $2}')

        ref_channel=$(echo "$version" | awk -F '-' '{print $2}')
        if [ "$branch" = "${{ github.event.repository.master_branch }}" ]; then
          channel=latest
        elif [ "next" = "${ref_channel%.*}" ]; then
          channel=next
        else
          echo "couldn't resolve release channel based on the pushed tag"
          echo "use <package>/v<X.Y.Z>          for "latest" channel"
          echo "use <package>/v<X.Y.Z>-next.<I> for "next"   channel"
          exit 1
        fi

        echo "package=$package" >> $GITHUB_OUTPUT
        echo "sha=$sha" >> $GITHUB_OUTPUT
        echo "branch=$branch" >> $GITHUB_OUTPUT
        echo "tag=$tag" >> $GITHUB_OUTPUT
        echo "version=$version" >> $GITHUB_OUTPUT
        echo "channel=$channel" >> $GITHUB_OUTPUT

        echo "package: $package"
        echo "sha: $sha"
        echo "branch: $branch"
        echo "tag: $tag"
        echo "version: $version"
        echo "channel: $channel"

    - name: Post Slack message
      id: slack
      uses: slackapi/slack-github-action@v1.26.0
      with:
        payload: |
          {
            "text": "${{ inputs.package-name }} v${{ steps.release-info.outputs.version }} is now being released"
          }
      env:
        SLACK_WEBHOOK_URL: ${{ inputs.slack-webhook }}
        SLACK_WEBHOOK_TYPE: INCOMING_WEBHOOK

    - name: Create local bin dir
      shell: bash
      run: |
        mkdir -p $HOME/.local/bin
        echo "LOCAL_BIN=$HOME/.local/bin" >> $GITHUB_ENV
        echo "$HOME/.local/bin" >> $GITHUB_PATH

    # - uses: robinraju/release-downloader@v1.5
    #   with:
    #     repository: 'jsontypedef/json-typedef-codegen'
    #     latest: true
    #     fileName: 'x86_64-unknown-linux-gnu.zip'

    # - name: Append jtd-codegen to PATH # * https://www.scivision.dev/github-actions-path-append/
    #   shell: bash
    #   run: |
    #     unzip -d $LOCAL_BIN x86_64-unknown-linux-gnu.zip
