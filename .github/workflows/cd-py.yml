name: "CD: configu pypi package"

on:
  push:
    tags:
      - py/v*

env:
  PACKAGE_NAME: "@configu/py"

jobs:
  build_and_deploy:
    name: Build and deploy
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: ./.github/actions/deploy-start-action
        id: deployment
        with:
          package-name: ${{ env.PACKAGE_NAME }}
          slack-webhook: ${{ secrets.SLACK_WEBHOOK_URL }}

      - uses: ./.github/actions/ts-env-action

      - uses: ./.github/actions/py-env-action

      - uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      # ----------
      - name: Bump package version
        run: |
          cd ${{ env.CWD }}
          poetry version ${{ steps.deployment.outputs.release-version }}

      - name: Build package code
        run: |
          cd ${{ env.CWD }}
          poetry build

      - name: Publish to pypi
        run: |
          cd ${{ env.CWD }}
          poetry config pypi-token.pypi ${{ secrets.PYPI_TOKEN }}
          poetry publish

      - name: Build package docs
        run: |
          cd ${{ env.CWD }}
          poetry run pdoc -o docs configu --logo https://raw.githubusercontent.com/configu/configu/main/assets/icon.svg --favicon https://raw.githubusercontent.com/configu/configu/main/assets/favicon.ico

      - name: Publish docs
        run: |
          aws s3 sync ${{ env.CWD }}/docs s3://${{ env.S3_BUCKET }}/${{ env.S3_FOLDER }}
          aws cloudfront create-invalidation --distribution-id ${{ env.CLOUDFRONT_DISTRIBUTION }} --paths "/${{ env.S3_FOLDER }}*"
        env:
          S3_BUCKET: "oss.configu.com"
          S3_FOLDER: "py"
          CLOUDFRONT_DISTRIBUTION: "E7C5AL5O299SC"
      # ----------

      - uses: ./.github/actions/deploy-end-action
        if: always()
        with:
          package-name: ${{ env.PACKAGE_NAME }}
          package-version: ${{ steps.deployment.outputs.release-version }}
          slack-webhook: ${{ secrets.SLACK_WEBHOOK_URL }}
