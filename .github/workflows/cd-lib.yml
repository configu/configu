name: CD/@configu/lib

on:
  push:
    tags:
      - 'lib/v*'

jobs:
  cd-lig:
    name: CD/@configu/lib
    runs-on: ubuntu-latest
    env:
      PACKAGE_NAME: '@configu/lib'
    permissions:
      contents: read
      id-token: write
    steps:
      - uses: actions/checkout@v4

      - uses: ./.github/actions/deploy-start-action
        id: deployment
        with:
          package-name: ${{ env.PACKAGE_NAME }}
          slack-webhook: ${{ secrets.SLACK_WEBHOOK_URL }}

      - uses: ./.github/actions/ts-env-action

      - uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}
      # ---
      - name: Bump package version
        run: |
          pnpm --filter ${{ env.PACKAGE_NAME }} exec \
            npm --no-git-tag-version version ${{ steps.deployment.outputs.release-version }}

      - name: Build package code
        run: |
          pnpm --filter ${{ env.PACKAGE_NAME }} run \
            build

      - name: Publish to npm
        run: |
          git diff
          pnpm --filter ${{ env.PACKAGE_NAME }} publish \
            --access public --provenance --no-git-checks --tag ${{ steps.deployment.outputs.release-channel }}
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
      # ---
      - uses: ./.github/actions/deploy-end-action
        if: always()
        with:
          package-name: ${{ env.PACKAGE_NAME }}
          package-version: ${{ steps.deployment.outputs.release-version }}
          slack-webhook: ${{ secrets.SLACK_WEBHOOK_URL }}
